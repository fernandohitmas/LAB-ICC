{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Prova 1 - Exc2","provenance":[],"authorship_tag":"ABX9TyPZrn/k94hzksT4hZRaaaAn"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_FWINz7mOzCS","executionInfo":{"status":"ok","timestamp":1633055005743,"user_tz":180,"elapsed":3805,"user":{"displayName":"Fernando Hitoshi Masumoto","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"09071309258970890311"}},"outputId":"1aff73fd-89ac-4b8d-95f7-06fdd128cb61"},"source":["# Elabore um programa em python que resolva um código de acesso.\n","# Toda vez que é pedido acesso, o sistema de segurança envia um código em formato de jogo da velha.\n","# Então, seu programa deve descobrir se o jogador 'x' ganhou ou perdeu para conseguir acessar (obs., \"x perdeu\" inclui os casos de empate).\n","\n","# Exemplo de jogada (estado do jogo da velha) e o código correspondente:\n","\n","# x o o\n","\n","# x o x\n","\n","# x - o\n","\n","# Código correspondente:\n","\n","# |x o o|x o x|x - o|\n","\n","# ('|' indica o início de uma linha )\n","\n","# Dica: use str.find() para encontrar uma substring (\" x \") na string do código (\"|x o o| o x x |o - x \")\n","\n","PADRAO_GANHOU = \"1 3 5|7 9 11|13 15 17|1 7 13|3 9 15|5 11 17|1 9 17|5 9 13\"\n","\n","\n","def verifica_jogada(jogada):\n","\n","  padrao_jogada = []\n","\n","  while \"x\" in jogada:\n","    \n","    n = jogada.find(\"x\")\n","    \n","    if len(jogada) < 18:\n","\n","      padrao_jogada.append(n + padrao_jogada[-1] + 1)\n","\n","    else:\n","\n","      padrao_jogada.append(n)\n","\n","    jogada = jogada[n+1:]\n","\n","  for padrao in PADRAO_GANHOU.split(\"|\"):\n","    \n","    ganhou = []\n","\n","    for letra in padrao.split(\" \"):\n","      \n","      if int(letra) in padrao_jogada:\n","\n","        ganhou.append(True)\n","      \n","      else:\n","\n","        ganhou.append(False)\n","\n","    if False not in ganhou:\n","\n","      return ganhou\n","\n","  return False\n","\n","def main():\n","\n","  # Lê jogada\n","  jogada = input()\n","\n","  # Verifica Jogada\n","  xganhou = verifica_jogada(jogada)\n","\n","  print (\"x ganhou\" if xganhou else \"x perdeu\")\n","\n","\n","if __name__ == \"__main__\":\n","  main()"],"execution_count":96,"outputs":[{"output_type":"stream","name":"stdout","text":["|o o o|x x -|x - x|\n","x perdeu\n"]}]}]}